{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","alert","cats","type","value","onChange","target","getGifs","category","a","fetch","encodeURI","url","json","data","gifs","map","images","title","id","downsized_medium","console","log","GifGridItem","hola","className","src","alt","GifGrid","index","loading","state","setState","useEffect","then","useFetchGifs","image","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACE,uBAAMC,SATa,SAACC,GACpBA,EAAEC,kBACGJ,EAAWK,QAAUL,EAAWM,OAAS,EAC5CC,MAAM,kBAGRT,GAAc,SAACU,GAAD,OAAWR,GAAX,mBAA0BQ,QAGxC,UACE,uBAAOC,KAAK,OAAOC,MAAOV,EAAYW,SAdrB,SAACR,GACpBF,EAAcE,EAAES,OAAOF,UAcrB,wBAAQD,KAAK,SAAb,wB,+BCpBOI,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,sEACHC,MAAM,mFAAD,OAC8DC,UACjFH,GAFmB,cADF,cACfI,EADe,gBAOEA,EAAIC,OAPN,uBAObC,EAPa,EAObA,KAEFC,EAAOD,EAAKE,KAAI,YAA4B,IAAzBC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACtC,MAAO,CAAEP,IAAG,OAAEK,QAAF,IAAEA,OAAF,EAAEA,EAAQG,iBAAiBR,IAAKM,QAAOC,SAErDE,QAAQC,IAAIP,GAZS,kBAadA,GAbc,4CAAH,sDCAPQ,EAAc,SAAC,GAA6B,EAA3BJ,GAA4B,IAAxBP,EAAuB,EAAvBA,IAAKM,EAAkB,EAAlBA,MAAkB,EAAXM,KAC5C,OACE,sBAAKC,UAAU,6CAAf,UACE,qBAAKC,IAAKd,EAAKe,IAAKT,IACpB,4BAAIA,QCCGU,EAAU,SAAC,GAAyB,IAAvBpB,EAAsB,EAAtBA,SACxB,GAD8C,EAAZqB,MCFR,SAACrB,GAC3B,MAA0Bf,mBAAS,CACjCqB,KAAM,GACNgB,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAWA,OANAC,qBAAU,WACR1B,EAAQC,GAAU0B,MAAK,SAACnB,GAEtBiB,EAAS,CAAElB,KAAMC,EAAMe,SAAS,SAEjC,CAACtB,IACGuB,EDT2BI,CAAa3B,IAAjCS,EAAd,EAAQH,KAAcgB,EAAtB,EAAsBA,QAYtB,OACE,qCACE,6BAAKtB,IACJsB,GAAW,yCACZ,yBAASL,UAAU,QAAnB,SACGR,EAAOD,KAAI,SAACoB,GAAD,OACV,cAAC,EAAD,eAAgCA,GAAdA,EAAMjB,aEInBkB,EAxBM,WAGnB,MAAoC5C,mBAAS,CAAC,gBAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAOA,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACG8C,EAAWtB,KAAI,SAACR,EAAUqB,GAAX,OACd,cAAC,EAAD,CAAwBrB,SAAUA,GAApBA,Y,MChBxB+B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.cc45de94.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const handleChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!inputValue.trim() || inputValue.length < 2) {\r\n      alert(\"Campo vacÃ­o\");\r\n      return;\r\n    }\r\n    setCategories((cats) => [inputValue, ...cats]);\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleChange} />\r\n      <button type=\"submit\">Buscar</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","export const getGifs = async (category) => {\r\n  const url = await fetch(\r\n    `https://api.giphy.com/v1/gifs/search?api_key=45YiLnovxLNswvl7wuxJ2mWkO8gOczk1&q=${encodeURI(\r\n      category\r\n    )}&limit=10`\r\n  );\r\n  // encodeURI() //reemplaza los espacios por porcentajes en la URL\r\n  const { data } = await url.json();\r\n\r\n  const gifs = data.map(({ images, title, id }) => {\r\n    return { url: images?.downsized_medium.url, title, id };\r\n  });\r\n  console.log(gifs);\r\n  return gifs;\r\n  // console.log(data);\r\n};\r\n","export const GifGridItem = ({ id, url, title, hola }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeInDown\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n","// import { useEffect, useState } from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n// import { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const GifGrid = ({ category, index }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  // useEffect(() => {\r\n  //   // console.log(category);\r\n  //   // getGifs(category).then((gifs) => setImages(gifs));\r\n  // }, [category]);\r\n\r\n  // []\r\n  //se ejecuta solo una vez porque no tiene dependencias\r\n  // [category]\r\n  // se va a ejecutar cuando [category] cambie\r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n      {loading && <p>Cargando</p>}\r\n      <section className=\"cards\">\r\n        {images.map((image) => (\r\n          <GifGridItem key={image.id} {...image} />\r\n        ))}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((gifs) => {\r\n      // console.log(gifs);\r\n      setState({ data: gifs, loading: false });\r\n    });\r\n  }, [category]);\r\n  return state;\r\n};\r\n","import { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  // const categories = [\"One Punch\", \"Samurai X\", \"Dragon Ball\"];\r\n\r\n  const [categories, setCategories] = useState([\"Dragon Ball\"]);\r\n\r\n  // const handleAdd = () => {\r\n  //   setCategories([...categories, \"Naruto\"]);\r\n  //   // setCategories((cats) => [...cats, \"Naruto\"]);\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n      <ol>\r\n        {categories.map((category, index) => (\r\n          <GifGrid key={category} category={category} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GifExpertApp from \"./GifExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}